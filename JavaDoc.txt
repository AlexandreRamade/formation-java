Règles :
1re phrase doit être une courte description de la classe/méthode/variable/...
phrases courtes
détail concis de l'algorythme/du traitement
tags @param et @return aubligatoires pour méthodes avec param et non void

Utilisation possible des balises HTML (sans en abuser !)
<b>, <i>, <ul> et <li>, <p>



Annotations à appliquer sur des interfaces, classes, méthodes

    @param
paramètres de la méthode
@param monParamettreA
@param monParamettreB

    @return
objet retourné par la méthode
@return Un objet de type T qui représente un truc.

    @throws
indique la présence d'une exception qui risque d'être propagée
@throws MonException Si division par zéro

    @author
indique le nom de l'auteur de la classe
ATTENTION : ne peut s'appliquer sur une méthode.
@author NomAuteur

    @version
indique le numéro de version de la classe
ATTENTION : ne peut s'appliquer sur une méthode.
Rq: il sera utilisé par @since
@version 3.0.2

    @see
fait référence à une autre interface, classe, méthode
@see MonAutreClasse
@see MonAutreClasse#maMethode(int, String)
@see CetteClasse#monParametre

    @since
permet de dater la présence d'une classe, méthode, paramètre, ...
@since 3.0.2

    @serial


    @deprecated
décrit la version depuis laquelle cette méthode, classe, ... est dépréciée, ainsi que ce qu'il faut utiliser à sa place
@deprecated Depuis Java 1.4, remplacé par monAutreMethode()